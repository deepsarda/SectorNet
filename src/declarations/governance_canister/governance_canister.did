type Result = variant { Ok; Err : text };
type Result_1 = variant { Ok : nat64; Err : text };
type Result_2 = variant { Ok : text; Err : text };
type Vote = record {
  id : nat64;
  end_timestamp : nat64;
  target_sector : principal;
  initiator : principal;
  start_timestamp : nat64;
  voters : vec record { principal; VoteChoice };
  votes_for : nat64;
  is_tallied : bool;
  votes_against : nat64;
};
type VoteChoice = variant { For; Against };
service : (principal, principal, principal) -> {
  cast_vote : (nat64, VoteChoice) -> (Result);
  get_active_votes : () -> (vec Vote) query;
  get_vote : (nat64) -> (opt Vote) query;
  initiate_censor_vote : (principal) -> (Result_1);
  tally_vote : (nat64) -> (Result_2);
}
